<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/aws-sdk/2.1456.0/aws-sdk.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

    <title>ChatGPT Translator</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, Helvetica, sans-serif;
            background-color: #0b0f1a;
            color: #ffffff;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            text-align: center;
            margin: 10px;
            padding: 20px;
            color: #ffffff;
        }

        .form-container {
            width: 80%;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            margin: 25px;
            gap: 20px;
        }

        .form-section {
            flex: 1;
            background-color: #101928;
            border-radius: 10px;
            padding: 20px;
        }

        .form-section label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        .form-section textarea {
            width: 100%;
            height: 150px;
            padding: 10px;
            border: 1px solid #374251;
            border-radius: 10px;
            box-sizing: border-box;
            margin-bottom: 20px;
            background-color: #1e2838;
            color: white;
        }

        .button-group {
            display: flex;
            justify-content: space-between;
            gap: 10px;
        }

        .button-group button,
        .flag-btn {
            width: 100%;
            padding: 10px;
            border: 1px solid #374251;
            border-radius: 10px;
            box-sizing: border-box;
            color: white;
            font-weight: bold;
            margin-top: 10px;
            cursor: pointer;
        }

        .submit-btn {
            background-color: #ef600f;
        }

        .clear-btn {
            background-color: #404a5a;
        }

        .flag-btn {
            background-color: #404a5a;
        }

        .clear-btn:hover,
        .flag-btn:hover {
            background-color: #374251;
        }

        .submit-btn:hover {
            background-color: #c44a03;
        }

        @media (max-width: 768px) {
            .form-container {
                flex-direction: column;
            }

            .button-group {
                flex-direction: column;
                align-items: stretch;
            }
        }

        .lds-ellipsis {
            display: none;
            position: fixed;
            width: 80px;
            height: 80px;
            top: 35%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1000;
        }

        .lds-ellipsis div {
            position: absolute;
            top: 33px;
            width: 13px;
            height: 13px;
            border-radius: 50%;
            background: #fff;
            animation-timing-function: cubic-bezier(0, 1, 1, 0);
        }

        .lds-ellipsis div:nth-child(1) {
            left: 8px;
            animation: lds-ellipsis1 0.6s infinite;
        }

        .lds-ellipsis div:nth-child(2) {
            left: 8px;
            animation: lds-ellipsis2 0.6s infinite;
        }

        .lds-ellipsis div:nth-child(3) {
            left: 32px;
            animation: lds-ellipsis2 0.6s infinite;
        }

        .lds-ellipsis div:nth-child(4) {
            left: 56px;
            animation: lds-ellipsis3 0.6s infinite;
        }

        @keyframes lds-ellipsis1 {
            0% {
                transform: scale(0);
            }

            100% {
                transform: scale(1);
            }
        }

        @keyframes lds-ellipsis3 {
            0% {
                transform: scale(1);
            }

            100% {
                transform: scale(0);
            }
        }

        @keyframes lds-ellipsis2 {
            0% {
                transform: translate(0, 0);
            }

            100% {
                transform: translate(24px, 0);
            }
        }

        /* Error Modal */
        .alert-simple.alert-danger {

            position: relative;
            top: 20%;
            left: 50%;
            transform: translateX(-50%);
            z-index: 9999;
            max-width: 80%;
            width: auto;
            padding: 10px;
            border: 1px solid rgba(241, 6, 6, 0.81);
            background-color: rgba(220, 17, 1, 0.33);
            box-shadow: 0px 0px 2px #ff0303;
            color: #f7eded;
            text-shadow: 2px 1px #00040a;
            transition: 0.5s;
            cursor: pointer;
            border-radius: 10px;
            overflow: hidden;
        }

        .alert-danger:hover {
            background-color: rgba(153, 11, 1, 0.33);
            transition: 0.5s;
        }

        .danger {
            font-size: 18px;
            color: #ff0303;
            text-shadow: none;
        }
    </style>
</head>

<body>
    <h1>ChatGPT Translator</h1>
    <!-- Error Modal -->
    <div class="col-sm-12" id="dangerModal" style="display: none;">
        <div class="alert fade alert-simple alert-danger alert-dismissible text-left font__family-montserrat font__size-16 font__weight-light brk-library-rendered rendered show"
            role="alert" data-brk-library="component__alert">
            <button type="button" class="close font__size-18" onclick="hideError()">
                <span aria-hidden="true">
                    <i class="fa fa-times danger"></i>
                </span>
                <span class="sr-only">Close</span>
            </button>
            <i class="start-icon far fa-times-circle faa-pulse animated"></i>
            <strong class="font__weight-semibold">Oh snap!</strong> <span id="errorText">Change a few things up and try
                submitting again.</span>
        </div>
    </div>
    <div class="form-container">
        <!-- User Input Form -->
        <div class="form-section">
            <div class="input-field">
                <label id="userInputLabel">User Input</label>
                <textarea type="text" class="user-input" id="userInput"></textarea>
            </div>
            <div class="button-group">
                <button class="clear-btn" onclick="clearInput()">Clear</button>
                <button class="submit-btn" id="submitBtn" onclick="handleSubmit()">Submit</button>
            </div>
        </div>
        <div class="lds-ellipsis" id="spinner">
            <div></div>
            <div></div>
            <div></div>
            <div></div>
        </div>

        <!-- Response Form -->
        <div class="form-section">
            <div class="input-field">
                <label id="responseLabel">Response</label>
                <textarea type="text" class="response-input" id="response" readonly></textarea>
            </div>
            <button class="flag-btn">Flag</button>
        </div>
    </div>

    <script>

        AWS.config.region = 'us-east-2';
        AWS.config.credentials = new AWS.CognitoIdentityCredentials({
            IdentityPoolId: "<%= identityPoolId %>",
        });

        AWS.config.credentials.get(function (err) {
            if (err) showError(err);
            else console.log('Successfully retreived AWS credentials');
        });

        function invokeLambdaFunction(inputText) {
            let lambda = new AWS.Lambda();
            let params = {
                // Replace with your own Lambda function name
                FunctionName: "<%= lambdaFunctionName %>",
                Payload: JSON.stringify({ text: inputText })
            };

            lambda.invoke(params, function (error, data) {
                document.getElementById('spinner').style.display = 'none';
                if (error) {
                    showError('AWS error: ' + JSON.stringify(error));
                    return;
                }
                if (data.FunctionError) {
                    showError("Lambda function error: " + data.Payload);
                    return;
                }
                if (data.Payload) {
                    let response = JSON.parse(data.Payload);
                    if (response.statusCode === 200) {
                        document.getElementById('response').value = response.body.output;
                        document.getElementById("userInputLabel").textContent = response.body.input_language;
                        document.getElementById("responseLabel").textContent = response.body.output_language;
                    } else {
                        showError("lambda error: " + response.body)
                    }
                }
            });
        }

        function handleSubmit() {
            document.getElementById('spinner').style.display = 'inline-block';
            invokeLambdaFunction(document.getElementById('userInput').value);
        }

        // Show error message in modal
        function showError(message) {
            document.getElementById('errorText').innerText = message;
            let modal = document.getElementById('dangerModal');
            modal.style.display = 'block';

            // Hide the modal after 8 seconds
            setTimeout(function () {
                modal.style.display = 'none';
            }, 8000);
        }

        function hideError() {
            let modal = document.getElementById('dangerModal');
            modal.style.display = 'none';
        }

        function clearInput() {
            document.getElementById('userInput').value = '';
            document.getElementById('response').value = '';
            document.getElementById("userInputLabel").textContent = 'User Input';
            document.getElementById("responseLabel").textContent = 'Response';
        }

        // Listen for changes in the user input field
        document.getElementById('userInput').addEventListener('input', function () {
            const inputText = document.getElementById('userInput').value;
        });
    </script>
</body>

</html>